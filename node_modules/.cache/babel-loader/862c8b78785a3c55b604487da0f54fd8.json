{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Desktop/apresentation/src/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\n// TODAS AS CHAMADAS DA API FICARÃO AQUI\nimport React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [githubState, setGithubState] = useState({\n    user: {\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  }); //função criada para buscar\n\n  const getUser = async username => {\n    api.get(`users/${username}`).then(({\n      data: {\n        user\n      }\n    }) => {\n      console.log(\"data: \" + data);\n      setGithubState(prevState => ({ ...prevState,\n        user: {\n          id: user.id,\n          avatar: user.avatar_url,\n          login: user.login,\n          name: user.name,\n          html_url: user.html_url,\n          blog: user.blog,\n          company: user.company,\n          location: user.location,\n          followers: user.followers,\n          following: user.following,\n          public_gists: user.public_gists,\n          public_repos: user.public_repos\n        }\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"cPiyc3jEhIA+FBT4G2+sG19CoSk=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/home/guilherme/Desktop/apresentation/src/providers/github-provider.js"],"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","login","undefined","name","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","get","then","data","console","log","prevState","id","avatar","avatar_url","contextValue"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC;AACzCK,EAAAA,OAAO,EAAE,KADgC;AAEzCC,EAAAA,IAAI,EAAE,EAFmC;AAGzCC,EAAAA,YAAY,EAAE,EAH2B;AAIzCC,EAAAA,OAAO,EAAE;AAJgC,CAAD,CAAnC;;AAOP,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAC7CI,IAAAA,IAAI,EAAE;AACJO,MAAAA,KAAK,EAAEC,SADH;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,QAAQ,EAAEF,SAHN;AAIJG,MAAAA,IAAI,EAAEH,SAJF;AAKJI,MAAAA,OAAO,EAAEJ,SALL;AAMJK,MAAAA,QAAQ,EAAEL,SANN;AAOJM,MAAAA,SAAS,EAAE,CAPP;AAQJC,MAAAA,SAAS,EAAE,CARP;AASJC,MAAAA,YAAY,EAAE,CATV;AAUJC,MAAAA,YAAY,EAAE;AAVV,KADuC;AAa7ChB,IAAAA,YAAY,EAAE,EAb+B;AAc7CC,IAAAA,OAAO,EAAE;AAdoC,GAAD,CAA9C,CADuC,CAkBvC;;AAEA,QAAMgB,OAAO,GAAG,MAAOC,QAAP,IAAoB;AAClCtB,IAAAA,GAAG,CAACuB,GAAJ,CAAS,SAAQD,QAAS,EAA1B,EAA6BE,IAA7B,CAAkC,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEtB,QAAAA;AAAF;AAAR,KAAD,KAAwB;AACxDuB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,IAAvB;AAEAhB,MAAAA,cAAc,CAAEmB,SAAD,KAAgB,EAC7B,GAAGA,SAD0B;AAE7BzB,QAAAA,IAAI,EAAE;AACJ0B,UAAAA,EAAE,EAAE1B,IAAI,CAAC0B,EADL;AAEJC,UAAAA,MAAM,EAAE3B,IAAI,CAAC4B,UAFT;AAGJrB,UAAAA,KAAK,EAAEP,IAAI,CAACO,KAHR;AAIJE,UAAAA,IAAI,EAAET,IAAI,CAACS,IAJP;AAKJC,UAAAA,QAAQ,EAAEV,IAAI,CAACU,QALX;AAMJC,UAAAA,IAAI,EAAEX,IAAI,CAACW,IANP;AAOJC,UAAAA,OAAO,EAAEZ,IAAI,CAACY,OAPV;AAQJC,UAAAA,QAAQ,EAAEb,IAAI,CAACa,QARX;AASJC,UAAAA,SAAS,EAAEd,IAAI,CAACc,SATZ;AAUJC,UAAAA,SAAS,EAAEf,IAAI,CAACe,SAVZ;AAWJC,UAAAA,YAAY,EAAEhB,IAAI,CAACgB,YAXf;AAYJC,UAAAA,YAAY,EAAEjB,IAAI,CAACiB;AAZf;AAFuB,OAAhB,CAAD,CAAd;AAiBD,KApBD;AAqBD,GAtBD;;AAwBA,QAAMY,YAAY,GAAG;AACnBxB,IAAAA,WADmB;AAEnBa,IAAAA,OAAO,EAAEvB,WAAW,CAAEwB,QAAD,IAAcD,OAAO,CAACC,QAAD,CAAtB,EAAkC,EAAlC;AAFD,GAArB;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEU,YAA/B;AAAA,cACGzB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtDD;;GAAMD,c;;KAAAA,c;AAwDN,eAAeA,cAAf","sourcesContent":["// TODAS AS CHAMADAS DA API FICARÃO AQUI\n\nimport React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProvider = ({ children }) => {\n  const [githubState, setGithubState] = useState({\n    user: {\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n  //função criada para buscar\n\n  const getUser = async (username) => {\n    api.get(`users/${username}`).then(({ data: { user } }) => {\n      console.log(\"data: \" + data);\n\n      setGithubState((prevState) => ({\n        ...prevState,\n        user: {\n          id: user.id,\n          avatar: user.avatar_url,\n          login: user.login,\n          name: user.name,\n          html_url: user.html_url,\n          blog: user.blog,\n          company: user.company,\n          location: user.location,\n          followers: user.followers,\n          following: user.following,\n          public_gists: user.public_gists,\n          public_repos: user.public_repos,\n        },\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n  };\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubProvider;\n"]},"metadata":{},"sourceType":"module"}