{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Desktop/apresentation/src/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\n// TODAS AS CHAMADAS DA API FICARÃO AQUI\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [githubState, setGithubState] = useState({\n    user: {\n      login: undefined,\n      name: undefined,\n      publicUrl: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n  const contextValue = {\n    githubState\n  };\n  return /*#__PURE__*/_jsxDEV(GithubProvider.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"lL4RQHDD4MwTOCD2tMqX8Cwlk3c=\");\n\n_c = GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/home/guilherme/Desktop/apresentation/src/providers/github-provider.js"],"names":["React","createContext","useState","GithubContext","user","repositories","starred","GithubProvider","children","githubState","setGithubState","login","undefined","name","publicUrl","blog","company","location","followers","following","public_gists","public_repos","contextValue"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC;AACzCG,EAAAA,IAAI,EAAE,EADmC;AAEzCC,EAAAA,YAAY,EAAE,EAF2B;AAGzCC,EAAAA,OAAO,EAAE;AAHgC,CAAD,CAAnC;;AAMP,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC;AAC7CE,IAAAA,IAAI,EAAE;AACJO,MAAAA,KAAK,EAAEC,SADH;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,SAAS,EAAEF,SAHP;AAIJG,MAAAA,IAAI,EAAEH,SAJF;AAKJI,MAAAA,OAAO,EAAEJ,SALL;AAMJK,MAAAA,QAAQ,EAAEL,SANN;AAOJM,MAAAA,SAAS,EAAE,CAPP;AAQJC,MAAAA,SAAS,EAAE,CARP;AASJC,MAAAA,YAAY,EAAE,CATV;AAUJC,MAAAA,YAAY,EAAE;AAVV,KADuC;AAa7ChB,IAAAA,YAAY,EAAE,EAb+B;AAc7CC,IAAAA,OAAO,EAAE;AAdoC,GAAD,CAA9C;AAiBA,QAAMgB,YAAY,GAAG;AACnBb,IAAAA;AADmB,GAArB;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEa,YAAhC;AAAA,cACGd;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMD,c;;KAAAA,c","sourcesContent":["// TODAS AS CHAMADAS DA API FICARÃO AQUI\n\nimport React, { createContext, useState } from \"react\";\n\nexport const GithubContext = createContext({\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProvider = ({ children }) => {\n  const [githubState, setGithubState] = useState({\n    user: {\n      login: undefined,\n      name: undefined,\n      publicUrl: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const contextValue = {\n    githubState,\n  };\n\n  return (\n    <GithubProvider.Provider value={contextValue}>\n      {children}\n    </GithubProvider.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}